"use strict";

define(['../../src/index'], function (tt) {
  var React = {
    parseArgs: function parseArgs(args) {
      var textChildren = [];
      var nodeChildren = [];

      for (var i = 2; i < args.length; ++i) {
        var arg = args[i];

        if (tt.core.isString(arg)) {
          if (arg) {
            textChildren.push(arg);
          }
        } else {
          nodeChildren.push(arg);
        }
      }

      var children;

      if (nodeChildren.length === 1 && tt.core.isList(nodeChildren[0])) {
        children = nodeChildren[0];
      } else {
        children = nodeChildren;
      }

      var props = {
        type: args[0],
        text: textChildren.join(' '),
        children: children
      };
      var attributes = args[1];

      if (attributes) {
        if (attributes.type) {
          throw 'type not allowd in attributes ' + JSON.stringify(attributes);
        }

        if (attributes.text && props.text) {
          throw 'text not allowed in attributes ' + JSON.stringify(attributes);
        }

        if (attributes.children && props.children) {
          throw 'children not allowed in attributes ' + JSON.stringify(attributes);
        }

        props = tt.core.extend(props, attributes);
      }

      return props;
    },
    createElement: function createElement() {
      var options = this.parseArgs(tt.core.argumentsToList(arguments));

      if (tt.core.isFunction(options.type)) {
        return options.type.apply(null, [options]);
      } else {
        return tt.createTtNode(options);
      }
    }
  };
  var items = [{
    label: 'Pos1',
    subItems: [{
      label: '1-1'
    }, {
      label: '1-2'
    }]
  }, {
    label: 'Pos2',
    subItems: [{
      label: '2-1'
    }, {
      label: '2-2'
    }]
  }];

  var SubItemNode = function SubItemNode(props) {
    return /*#__PURE__*/React.createElement("li", null, props.subItem.label);
  };

  var ItemNode = function ItemNode(props) {
    return /*#__PURE__*/React.createElement("li", null, /*#__PURE__*/React.createElement("span", null, props.item.label), /*#__PURE__*/React.createElement("ul", null, tt.createMappedList(props.item.subItems, subItem => /*#__PURE__*/React.createElement(SubItemNode, {
      subItem: subItem
    }))));
  };

  var node = /*#__PURE__*/React.createElement("ul", null, tt.createMappedList(items, item => /*#__PURE__*/React.createElement(ItemNode, {
    item: item
  })));
  document.body.appendChild(node.getDomNode());
  items.push({
    label: '3',
    subItems: []
  });
});
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInRlc3QuanN4Il0sIm5hbWVzIjpbImRlZmluZSIsInR0IiwiUmVhY3QiLCJwYXJzZUFyZ3MiLCJhcmdzIiwidGV4dENoaWxkcmVuIiwibm9kZUNoaWxkcmVuIiwiaSIsImxlbmd0aCIsImFyZyIsImNvcmUiLCJpc1N0cmluZyIsInB1c2giLCJjaGlsZHJlbiIsImlzTGlzdCIsInByb3BzIiwidHlwZSIsInRleHQiLCJqb2luIiwiYXR0cmlidXRlcyIsIkpTT04iLCJzdHJpbmdpZnkiLCJleHRlbmQiLCJjcmVhdGVFbGVtZW50Iiwib3B0aW9ucyIsImFyZ3VtZW50c1RvTGlzdCIsImFyZ3VtZW50cyIsImlzRnVuY3Rpb24iLCJhcHBseSIsImNyZWF0ZVR0Tm9kZSIsIml0ZW1zIiwibGFiZWwiLCJzdWJJdGVtcyIsIlN1Ykl0ZW1Ob2RlIiwic3ViSXRlbSIsIkl0ZW1Ob2RlIiwiaXRlbSIsImNyZWF0ZU1hcHBlZExpc3QiLCJub2RlIiwiZG9jdW1lbnQiLCJib2R5IiwiYXBwZW5kQ2hpbGQiLCJnZXREb21Ob2RlIl0sIm1hcHBpbmdzIjoiOztBQUFBQSxNQUFNLENBQUMsQ0FBQyxpQkFBRCxDQUFELEVBQXNCLFVBQVVDLEVBQVYsRUFBYztBQUV0QyxNQUFJQyxLQUFLLEdBQUc7QUFFUkMsSUFBQUEsU0FBUyxFQUFFLG1CQUFVQyxJQUFWLEVBQWdCO0FBRXZCLFVBQUlDLFlBQVksR0FBRyxFQUFuQjtBQUNBLFVBQUlDLFlBQVksR0FBRyxFQUFuQjs7QUFDQSxXQUFLLElBQUlDLENBQUMsR0FBRyxDQUFiLEVBQWdCQSxDQUFDLEdBQUdILElBQUksQ0FBQ0ksTUFBekIsRUFBaUMsRUFBRUQsQ0FBbkMsRUFBc0M7QUFDbEMsWUFBSUUsR0FBRyxHQUFHTCxJQUFJLENBQUNHLENBQUQsQ0FBZDs7QUFDQSxZQUFJTixFQUFFLENBQUNTLElBQUgsQ0FBUUMsUUFBUixDQUFpQkYsR0FBakIsQ0FBSixFQUEyQjtBQUN2QixjQUFJQSxHQUFKLEVBQVM7QUFDTEosWUFBQUEs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cEIsS0FBVixFQUFpQjtBQUM1Qix3QkFBTyw2Q0FDSCxrQ0FBT0EsS0FBSyxDQUFDcUIsSUFBTixDQUFXTCxLQUFsQixDQURHLGVBRUgsZ0NBQUs5QixFQUFFLENBQUNvQyxnQkFBSCxDQUFvQnRCLEtBQUssQ0FBQ3FCLElBQU4sQ0FBV0osUUFBL0IsRUFBeUNFLE9BQU8saUJBQUksb0JBQUMsV0FBRDtBQUFhLE1BQUEsT0FBTyxFQUFFQTtBQUF0QixNQUFwRCxDQUFMLENBRkcsQ0FBUDtBQUlILEdBTEQ7O0FBT0EsTUFBSUksSUFBSSxnQkFDSixnQ0FDS3JDLEVBQUUsQ0FBQ29DLGdCQUFILENBQW9CUCxLQUFwQixFQUEyQk0sSUFBSSxpQkFBSSxvQkFBQyxRQUFEO0FBQVUsSUFBQSxJQUFJLEVBQUVBO0FBQWhCLElBQW5DLENBREwsQ0FESjtBQUlBRyxFQUFBQSxRQUFRLENBQUNDLElBQVQsQ0FBY0MsV0FBZCxDQUEwQkgsSUFBSSxDQUFDSSxVQUFMLEVBQTFCO0FBRUFaLEVBQUFBLEtBQUssQ0FBQ2xCLElBQU4sQ0FBVztBQUFFbUIsSUFBQUEsS0FBSyxFQUFFLEdBQVQ7QUFBY0MsSUFBQUEsUUFBUSxFQUFDO0FBQXZCLEdBQVg7QUFFSCxDQWhGSyxDQUFOIiwic291cmNlc0NvbnRlbnQiOlsiZGVmaW5lKFsnLi4vLi4vc3JjL2luZGV4J10sIGZ1bmN0aW9uICh0dCkge1xuXG4gICAgdmFyIFJlYWN0ID0ge1xuXG4gICAgICAgIHBhcnNlQXJnczogZnVuY3Rpb24gKGFyZ3MpIHtcblxuICAgICAgICAgICAgdmFyIHRleHRDaGlsZHJlbiA9IFtdO1xuICAgICAgICAgICAgdmFyIG5vZGVDaGlsZHJlbiA9IFtdO1xuICAgICAgICAgICAgZm9yICh2YXIgaSA9IDI7IGkgPCBhcmdzLmxlbmd0aDsgKytpKSB7XG4gICAgICAgICAgICAgICAgdmFyIGFyZyA9IGFyZ3NbaV07XG4gICAgICAgICAgICAgICAgaWYgKHR0LmNvcmUuaXNTdHJpbmcoYXJnKSkge1xuICAgICAgICAgICAgICAgICAgICBpZiAoYXJnKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICB0ZXh0Q2hpbGRyZW4ucHVzaChhcmcpXG4gICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgICAgICAgICAgICBub2RlQ2hpbGRyZW4ucHVzaChhcmcpO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgIH1cblxuICAgICAgICAgICAgdmFyIGNoaWxkcmVuO1xuICAgICAgICAgICAgaWYgKG5vZGVDaGlsZHJlbi5sZW5ndGggPT09IDEgJiYgdHQuY29yZS5pc0xpc3Qobm9kZUNoaWxkcmVuWzBdKSkge1xuICAgICAgICAgICAgICAgIGNoaWxkcmVuID0gbm9kZUNoaWxkcmVuWzBdO1xuICAgICAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgICAgICBjaGlsZHJlbiA9IG5vZGVDaGlsZHJlbjtcbiAgICAgICAgICAgIH1cblxuICAgICAgICAgICAgdmFyIHByb3BzID0ge1xuICAgICAgICAgICAgICAgIHR5cGU6IGFyZ3NbMF0sXG4gICAgICAgICAgICAgICAgdGV4dDogdGV4dENoaWxkcmVuLmpvaW4oJyAnKSxcbiAgICAgICAgICAgICAgICBjaGlsZHJlbjogY2hpbGRyZW5cbiAgICAgICAgICAgIH1cblxuICAgICAgICAgICAgdmFyIGF0dHJpYnV0ZXMgPSBhcmdzWzFdO1xuICAgICAgICAgICAgaWYgKGF0dHJpYnV0ZXMpIHtcbiAgICAgICAgICAgICAgICBpZiAoYXR0cmlidXRlcy50eXBlKSB7XG4gICAgICAgICAgICAgICAgICAgIHRocm93ICd0eXBlIG5vdCBhbGxvd2QgaW4gYXR0cmlidXRlcyAnICsgSlNPTi5zdHJpbmdpZnkoYXR0cmlidXRlcylcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgaWYgKGF0dHJpYnV0ZXMudGV4dCAmJiBwcm9wcy50ZXh0KSB7XG4gICAgICAgICAgICAgICAgICAgIHRocm93ICd0ZXh0IG5vdCBhbGxvd2VkIGluIGF0dHJpYnV0ZXMgJyArIEpTT04uc3RyaW5naWZ5KGF0dHJpYnV0ZXMpXG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIGlmIChhdHRyaWJ1dGVzLmNoaWxkcmVuICYmIHByb3BzLmNoaWxkcmVuKSB7XG4gICAgICAgICAgICAgICAgICAgIHRocm93ICdjaGlsZHJlbiBub3QgYWxsb3dlZCBpbiBhdHRyaWJ1dGVzICcgKyBKU09OLnN0cmluZ2lmeShhdHRyaWJ1dGVzKVxuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICBwcm9wcyA9IHR0LmNvcmUuZXh0ZW5kKHByb3BzLCBhdHRyaWJ1dGVzKVxuICAgICAgICAgICAgfVxuXG4gICAgICAgICAgICByZXR1cm4gcHJvcHM7XG4gICAgICAgIH0sXG5cbiAgICAgICAgY3JlYXRlRWxlbWVudDogZnVuY3Rpb24gKCkge1xuICAgICAgICAgICAgdmFyIG9wdGlvbnMgPSB0aGlzLnBhcnNlQXJncyh0dC5jb3JlLmFyZ3VtZW50c1RvTGlzdChhcmd1bWVudHMpKTtcbiAgICAgICAgICAgIGlmICh0dC5jb3JlLmlzRnVuY3Rpb24ob3B0aW9ucy50eXBlKSkge1xuICAgICAgICAgICAgICAgIHJldHVybiBvcHRpb25zLnR5cGUuYXBwbHkobnVsbCwgW29wdGlvbnNdKTtcbiAgICAgICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgICAgICAgcmV0dXJuIHR0LmNyZWF0ZVR0Tm9kZShvcHRpb25zKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgIH1cblxuICAgIHZhciBpdGVtcyA9IFt7IGxhYmVsOiAnUG9zMScsIHN1Ykl0ZW1zOiBbeyBsYWJlbDogJzEtMScgfSwgeyBsYWJlbDogJzEtMicgfV0gfSwgeyBsYWJlbDogJ1BvczInLCBzdWJJdGVtczogW3sgbGFiZWw6ICcyLTEnIH0sIHsgbGFiZWw6ICcyLTInIH1dIH1dO1xuXG4gICAgdmFyIFN1Ykl0ZW1Ob2RlID0gZnVuY3Rpb24gKHByb3BzKSB7XG4gICAgICAgIHJldHVybiA8bGk+e3Byb3BzLnN1Ykl0ZW0ubGFiZWx9PC9saT47XG4gICAgfVxuXG4gICAgdmFyIEl0ZW1Ob2RlID0gZnVuY3Rpb24gKHByb3BzKSB7XG4gICAgICAgIHJldHVybiA8bGk+XG4gICAgICAgICAgICA8c3Bhbj57cHJvcHMuaXRlbS5sYWJlbH08L3NwYW4+XG4gICAgICAgICAgICA8dWw+e3R0LmNyZWF0ZU1hcHBlZExpc3QocHJvcHMuaXRlbS5zdWJJdGVtcywgc3ViSXRlbSA9PiA8U3ViSXRlbU5vZGUgc3ViSXRlbT17c3ViSXRlbX0gLz4pfTwvdWw+XG4gICAgICAgIDwvbGk+O1xuICAgIH1cblxuICAgIHZhciBub2RlID1cbiAgICAgICAgPHVsPlxuICAgICAgICAgICAge3R0LmNyZWF0ZU1hcHBlZExpc3QoaXRlbXMsIGl0ZW0gPT4gPEl0ZW1Ob2RlIGl0ZW09e2l0ZW19IC8+KX1cbiAgICAgICAgPC91bD47XG4gICAgZG9jdW1lbnQuYm9keS5hcHBlbmRDaGlsZChub2RlLmdldERvbU5vZGUoKSk7XG5cbiAgICBpdGVtcy5wdXNoKHsgbGFiZWw6ICczJywgc3ViSXRlbXM6W10gfSk7XG5cbn0pO1xuIl19