"use strict";

define(['../core/event', '../core/decorate', './property/PropertyCollector'], function (event, decorate, PropertyCollector) {
  var module = {};

  module.methodName = function (type, property) {
    return type + property[0].toUpperCase() + property.slice(1);
  };

  module.propertyName = function (methodName) {
    var prefix = methodName.slice(0, 3);

    if (prefix !== 'set' && prefix !== 'get' || methodName.length === 3) {
      return null;
    }

    return methodName[3].toLowerCase() + methodName.slice(4);
  };

  module.methodType = function (methodName) {
    return methodName.slice(0, 3);
  };

  module.decorateProperty = function (obj, propertyName) {
    var eventData = event.getEventData(obj); // generate getter

    var getterName = module.methodName('get', propertyName);

    if (!obj[getterName]) {
      obj[getterName] = function () {
        return this[propertyName];
      };
    } // decorate getter


    if (!decorate.isDecorated(obj, getterName, 'raise-get-event')) {
      decorate.decorate(obj, getterName, 'raise-get-event', function () {
        PropertyCollector.notify({
          obj: obj,
          propertyName: propertyName
        });
      }.bind(this));
    } // generate setter


    var setterName = module.methodName('set', propertyName);

    if (!obj[setterName]) {
      obj[setterName] = function (value) {
        this[propertyName] = value;
      };
    } // decorate setter


    if (!decorate.isDecorated(obj, setterName, 'raise-set-event')) {
      decorate.decorate(obj, setterName, 'raise-set-event', null, function (value) {
        event.raiseEvent(obj, module.methodName('set', propertyName), value);
        ;
      }.bind(this));
    }
  };

  module.getProperty = function (obj, propertyName) {
    if (!obj.__dict) {
      return obj[module.methodName('get', propertyName)].apply(obj, []);
    } else {
      PropertyCollector.notify({
        obj: obj,
        propertyName: propertyName
      });
      return obj[propertyName];
    }
  };

  module.setProperty = function (obj, propertyName, value) {
    if (!obj.__dict) {
      return obj[module.methodName('set', propertyName)].apply(obj, [value]);
    } else {
      obj[propertyName] = value;
      event.raiseEvent(obj, module.methodName('set', propertyName), value);
    }
  };

  return module;
});
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uLy4uL3NyYy90dC91dGlsLmpzIl0sIm5hbWVzIjpbImRlZmluZSIsImV2ZW50IiwiZGVjb3JhdGUiLCJQcm9wZXJ0eUNvbGxlY3RvciIsIm1vZHVsZSIsIm1ldGhvZE5hbWUiLCJ0eXBlIiwicHJvcGVydHkiLCJ0b1VwcGVyQ2FzZSIsInNsaWNlIiwicHJvcGVydHlOYW1lIiwicHJlZml4IiwibGVuZ3RoIiwidG9Mb3dlckNhc2UiLCJtZXRob2RUeXBlIiwiZGVjb3JhdGVQcm9wZXJ0eSIsIm9iaiIsImV2ZW50RGF0YSIsImdldEV2ZW50RGF0YSIsImdldHRlck5hbWUiLCJpc0RlY29yYXRlZCIsIm5vdGlmeSIsImJpbmQiLCJzZXR0ZXJOYW1lIiwidmFsdWUiLCJyYWlzZUV2ZW50IiwiZ2V0UHJvcGVydHkiLCJfX2RpY3QiLCJhcHBseSIsInNldFByb3BlcnR5Il0sIm1hcHBpbmdzIjoiOztBQUFBQSxNQUFNLENBQUMsQ0FBQyxlQUFELEVBQWtCLGtCQUFsQixFQUFzQyw4QkFBdEMsQ0FBRCxFQUF3RSxVQUFVQyxLQUFWLEVBQWlCQyxRQUFqQixFQUEyQkMsaUJBQTNCLEVBQThDO0FBRXhILE1BQUlDLE1BQU0sR0FBRyxFQUFiOztBQUVBQSxFQUFBQSxNQUFNLENBQUNDLFVBQVAsR0FBb0IsVUFBVUMsSUFBVixFQUFnQkMsUUFBaEIsRUFBMEI7QUFDMUMsV0FBT0QsSUFBSSxHQUFHQyxRQUFRLENBQUMsQ0FBRCxDQUFSLENBQVlDLFdBQVosRUFBUCxHQUFtQ0QsUUFBUSxDQUFDRSxLQUFULENBQWUsQ0FBZixDQUExQztBQUNILEdBRkQ7O0FBSUFMLEVBQUFBLE1BQU0sQ0FBQ00sWUFBUCxHQUFzQixVQUFVTCxVQUFWLEVBQXNCO0FBQ3hDLFFBQUlNLE1BQU0sR0FBR04sVUFBVSxDQUFDSSxLQUFYLENBQWlCLENBQWpCLEVBQW9CLENBQXBCLENBQWI7O0FBQ0EsUUFBS0UsTUFBTSxLQUFLLEtBQVgsSUFBb0JBLE1BQU0sS0FBSyxLQUFoQyxJQUEw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aUIsQ0FBQ2tCLE1BQWxCLENBQXlCO0FBQUVMLFFBQUFBLEdBQUcsRUFBRUEsR0FBUDtBQUFZTixRQUFBQSxZQUFZLEVBQUVBO0FBQTFCLE9BQXpCO0FBQ0EsYUFBT00sR0FBRyxDQUFDTixZQUFELENBQVY7QUFDSDtBQUNKLEdBUEQ7O0FBU0FOLEVBQUFBLE1BQU0sQ0FBQ3lCLFdBQVAsR0FBcUIsVUFBVWIsR0FBVixFQUFlTixZQUFmLEVBQTZCYyxLQUE3QixFQUFvQztBQUNyRCxRQUFJLENBQUNSLEdBQUcsQ0FBQ1csTUFBVCxFQUFpQjtBQUNiLGFBQU9YLEdBQUcsQ0FBQ1osTUFBTSxDQUFDQyxVQUFQLENBQWtCLEtBQWxCLEVBQXlCSyxZQUF6QixDQUFELENBQUgsQ0FBNENrQixLQUE1QyxDQUFrRFosR0FBbEQsRUFBdUQsQ0FBQ1EsS0FBRCxDQUF2RCxDQUFQO0FBQ0gsS0FGRCxNQUVPO0FBQ0hSLE1BQUFBLEdBQUcsQ0FBQ04sWUFBRCxDQUFILEdBQW9CYyxLQUFwQjtBQUNBdkIsTUFBQUEsS0FBSyxDQUFDd0IsVUFBTixDQUFpQlQsR0FBakIsRUFBc0JaLE1BQU0sQ0FBQ0MsVUFBUCxDQUFrQixLQUFsQixFQUF5QkssWUFBekIsQ0FBdEIsRUFBOERjLEtBQTlEO0FBQ0g7QUFDSixHQVBEOztBQVVBLFNBQU9wQixNQUFQO0FBQ0gsQ0E1RUssQ0FBTiIsInNvdXJjZXNDb250ZW50IjpbImRlZmluZShbJy4uL2NvcmUvZXZlbnQnLCAnLi4vY29yZS9kZWNvcmF0ZScsICcuL3Byb3BlcnR5L1Byb3BlcnR5Q29sbGVjdG9yJ10sIGZ1bmN0aW9uIChldmVudCwgZGVjb3JhdGUsIFByb3BlcnR5Q29sbGVjdG9yKSB7XG5cbiAgICB2YXIgbW9kdWxlID0ge307XG5cbiAgICBtb2R1bGUubWV0aG9kTmFtZSA9IGZ1bmN0aW9uICh0eXBlLCBwcm9wZXJ0eSkge1xuICAgICAgICByZXR1cm4gdHlwZSArIHByb3BlcnR5WzBdLnRvVXBwZXJDYXNlKCkgKyBwcm9wZXJ0eS5zbGljZSgxKTtcbiAgICB9O1xuXG4gICAgbW9kdWxlLnByb3BlcnR5TmFtZSA9IGZ1bmN0aW9uIChtZXRob2ROYW1lKSB7XG4gICAgICAgIHZhciBwcmVmaXggPSBtZXRob2ROYW1lLnNsaWNlKDAsIDMpO1xuICAgICAgICBpZiAoKHByZWZpeCAhPT0gJ3NldCcgJiYgcHJlZml4ICE9PSAnZ2V0JykgfHwgbWV0aG9kTmFtZS5sZW5ndGggPT09IDMpIHtcbiAgICAgICAgICAgIHJldHVybiBudWxsO1xuICAgICAgICB9XG4gICAgICAgIHJldHVybiBtZXRob2ROYW1lWzNdLnRvTG93ZXJDYXNlKCkgKyBtZXRob2ROYW1lLnNsaWNlKDQpO1xuICAgIH07XG5cbiAgICBtb2R1bGUubWV0aG9kVHlwZSA9IGZ1bmN0aW9uIChtZXRob2ROYW1lKSB7XG4gICAgICAgIHJldHVybiBtZXRob2ROYW1lLnNsaWNlKDAsIDMpO1xuICAgIH07XG5cbiAgICBtb2R1bGUuZGVjb3JhdGVQcm9wZXJ0eSA9IGZ1bmN0aW9uIChvYmosIHByb3BlcnR5TmFtZSkge1xuXG4gICAgICAgIHZhciBldmVudERhdGEgPSBldmVudC5nZXRFdmVudERhdGEob2JqKTtcblxuICAgICAgICAvLyBnZW5lcmF0ZSBnZXR0ZXJcbiAgICAgICAgdmFyIGdldHRlck5hbWUgPSBtb2R1bGUubWV0aG9kTmFtZSgnZ2V0JywgcHJvcGVydHlOYW1lKTtcbiAgICAgICAgaWYgKCFvYmpbZ2V0dGVyTmFtZV0pIHtcbiAgICAgICAgICAgIG9ialtnZXR0ZXJOYW1lXSA9IGZ1bmN0aW9uICgpIHtcbiAgICAgICAgICAgICAgICByZXR1cm4gdGhpc1twcm9wZXJ0eU5hbWVdO1xuICAgICAgICAgICAgfVxuICAgICAgICB9XG5cbiAgICAgICAgLy8gZGVjb3JhdGUgZ2V0dGVyXG4gICAgICAgIGlmICghZGVjb3JhdGUuaXNEZWNvcmF0ZWQob2JqLCBnZXR0ZXJOYW1lLCAncmFpc2UtZ2V0LWV2ZW50JykpIHtcbiAgICAgICAgICAgIGRlY29yYXRlLmRlY29yYXRlKG9iaiwgZ2V0dGVyTmFtZSwgJ3JhaXNlLWdldC1ldmVudCcsIGZ1bmN0aW9uICgpIHtcbiAgICAgICAgICAgICAgICBQcm9wZXJ0eUNvbGxlY3Rvci5ub3RpZnkoeyBvYmo6IG9iaiwgcHJvcGVydHlOYW1lOiBwcm9wZXJ0eU5hbWUgfSk7XG4gICAgICAgICAgICB9LmJpbmQodGhpcykpO1xuICAgICAgICB9XG5cbiAgICAgICAgLy8gZ2VuZXJhdGUgc2V0dGVyXG4gICAgICAgIHZhciBzZXR0ZXJOYW1lID0gbW9kdWxlLm1ldGhvZE5hbWUoJ3NldCcsIHByb3BlcnR5TmFtZSk7XG4gICAgICAgIGlmICghb2JqW3NldHRlck5hbWVdKSB7XG4gICAgICAgICAgICBvYmpbc2V0dGVyTmFtZV0gPSBmdW5jdGlvbiAodmFsdWUpIHtcbiAgICAgICAgICAgICAgICB0aGlzW3Byb3BlcnR5TmFtZV0gPSB2YWx1ZTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgfVxuXG4gICAgICAgIC8vIGRlY29yYXRlIHNldHRlclxuICAgICAgICBpZiAoIWRlY29yYXRlLmlzRGVjb3JhdGVkKG9iaiwgc2V0dGVyTmFtZSwgJ3JhaXNlLXNldC1ldmVudCcpKSB7XG4gICAgICAgICAgICBkZWNvcmF0ZS5kZWNvcmF0ZShvYmosIHNldHRlck5hbWUsICdyYWlzZS1zZXQtZXZlbnQnLCBudWxsLCBmdW5jdGlvbiAodmFsdWUpIHtcbiAgICAgICAgICAgICAgICBldmVudC5yYWlzZUV2ZW50KG9iaiwgbW9kdWxlLm1ldGhvZE5hbWUoJ3NldCcsIHByb3BlcnR5TmFtZSksIHZhbHVlKTs7XG4gICAgICAgICAgICB9LmJpbmQodGhpcykpO1xuICAgICAgICB9XG5cbiAgICB9O1xuXG4gICAgbW9kdWxlLmdldFByb3BlcnR5ID0gZnVuY3Rpb24gKG9iaiwgcHJvcGVydHlOYW1lKSB7XG4gICAgICAgIGlmICghb2JqLl9fZGljdCkge1xuICAgICAgICAgICAgcmV0dXJuIG9ialttb2R1bGUubWV0aG9kTmFtZSgnZ2V0JywgcHJvcGVydHlOYW1lKV0uYXBwbHkob2JqLCBbXSk7XG4gICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgICBQcm9wZXJ0eUNvbGxlY3Rvci5ub3RpZnkoeyBvYmo6IG9iaiwgcHJvcGVydHlOYW1lOiBwcm9wZXJ0eU5hbWUgfSk7XG4gICAgICAgICAgICByZXR1cm4gb2JqW3Byb3BlcnR5TmFtZV07XG4gICAgICAgIH1cbiAgICB9O1xuXG4gICAgbW9kdWxlLnNldFByb3BlcnR5ID0gZnVuY3Rpb24gKG9iaiwgcHJvcGVydHlOYW1lLCB2YWx1ZSkge1xuICAgICAgICBpZiAoIW9iai5fX2RpY3QpIHtcbiAgICAgICAgICAgIHJldHVybiBvYmpbbW9kdWxlLm1ldGhvZE5hbWUoJ3NldCcsIHByb3BlcnR5TmFtZSldLmFwcGx5KG9iaiwgW3ZhbHVlXSk7XG4gICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgICBvYmpbcHJvcGVydHlOYW1lXSA9IHZhbHVlO1xuICAgICAgICAgICAgZXZlbnQucmFpc2VFdmVudChvYmosIG1vZHVsZS5tZXRob2ROYW1lKCdzZXQnLCBwcm9wZXJ0eU5hbWUpLCB2YWx1ZSk7XG4gICAgICAgIH1cbiAgICB9O1xuXG5cbiAgICByZXR1cm4gbW9kdWxlO1xufSk7XG5cbiJdfQ==